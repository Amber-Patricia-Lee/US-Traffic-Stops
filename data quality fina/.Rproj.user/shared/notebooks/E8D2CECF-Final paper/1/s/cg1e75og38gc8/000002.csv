"0",""
"0","dataset_names <- dbGetQuery(con, ""SHOW TABLES"")[[1]]"
"0",""
"0","# remove datasets with ""_"" in the name"
"0","dataset_names <- dataset_names[str_detect(dataset_names, ""_"", negate = TRUE)]"
"0",""
"0","query_sample <- function(dataset_str, percent){"
"0","  # input is dataset_str (str) with dataset name, and percent (dbl) for the random sample %"
"0","  # output is the dataframe with a column added for the name of dataset and character NA's"
"0","  # replaced with NA's"
"0","  # global variable con is the SQL connection"
"0","  "
"0","  command <- paste(""SELECT * FROM"", dataset_str, ""WHERE rand() <="", percent, "
"0","                   # in SQL, filter for vehicular stops"
"0","                   "" AND type = 'vehicular'"","
"0","                   sep = "" "")"
"0",""
"0","  df <- dbGetQuery(con, command) %>% mutate(dataset_name = dataset_str)"
"0","  "
"0","  # do not consider empty datasets"
"0","  if (dim(df)[1] == 0){"
"0","    return(NULL)"
"0","  }"
"0","  "
"0","  # replace character NA's with NA"
"0","  if (sum(is.na(df) == 0)){"
"0","    "
"0","    df[df == ""NA""] = NA"
"0",""
"0","  }"
"0","  "
"0","  return(df %>% dplyr::select(-type))"
"0","  "
"0","}"
"0",""
"0","dataset_lst <- lapply(dataset_names, query_sample, 0.2)"
"0",""
"0","# will need to save to and load rdata when knitting so that the coefficient results are the same"
"0",""
"0","# remove empty datasets through logical indexing"
"0","dataset_lst <- dataset_lst[sapply(dataset_lst, function(x) isTRUE(nrow(x) > 0))]"
"0",""
