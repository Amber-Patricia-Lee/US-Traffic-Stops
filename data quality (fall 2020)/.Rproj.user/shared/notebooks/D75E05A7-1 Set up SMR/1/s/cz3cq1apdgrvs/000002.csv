"0",""
"0","check_nonempty <- function(var, dataset, n_obsv){"
"0","  # helper function for removing empty columns"
"0","    "
"0","  # the function environment has the parameter dataset"
"0","  col_str <- paste(""dataset$"", var, sep = """")"
"0","  col <- eval(parse(text = col_str))"
"0","  isCollected <- sum(is.na(col)) < n_obsv"
"0","  "
"0","  return(isCollected)"
"0","  "
"0","}"
"0",""
"0","remove_empty_col <- function(dataset){"
"0","  # a variable is 'collected' if there is a column for it in the dataset"
"0","  # but being collected doesn't imply nonempty"
"0","  "
"0","  collected_var <- names(dataset)"
"0","  n_obsv <- dim(dataset)[1]"
"0","  "
"0","  nonempty_bools <- unlist(lapply(collected_var, check_nonempty, dataset, n_obsv))"
"0","  "
"0","  # use logial indexing!"
"0","  nonempty_var <- collected_var[nonempty_bools]"
"0","  "
"0","  ## in case i need this information"
"0","  # empty_var <- collected_var[!nonempty_bools]"
"0","  "
"0","  return(dataset %>% dplyr::select({{ nonempty_var }}))"
"0","  "
"0","}"
"0",""
"0","dataset_lst <- lapply(dataset_lst, remove_empty_col)"
"0",""
