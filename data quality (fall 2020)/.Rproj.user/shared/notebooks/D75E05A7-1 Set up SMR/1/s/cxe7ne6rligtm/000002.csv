"0",""
"0","myfilter_for <- function(dataset, var_vect, need_containment){"
"0","  # if need_containment is true, then function only returns"
"0","  # datasets containing ALL variables specified in var_vect"
"0","  "
"0","  # need_containment = TRUE results in more restrictive filtering"
"0","  "
"0","  dataset_var <- names(dataset)"
"0","  intersection <- var_vect[var_vect %in% dataset_var]"
"0","  "
"0","  if (need_containment){"
"0","    "
"0","    if (length(intersection) == length(var_vect)) {"
"0","      # embrace syntax from dplyr programming"
"0","      return(dataset %>% dplyr::select({{ var_vect }}))"
"0","    } else {"
"0","      return(NULL)"
"0","    }"
"0","    "
"0","  } else if (!need_containment){"
"0","    "
"0","    if (length(intersection > 0)) {"
"0","      # embrace syntax from dplyr programming"
"0","      return(dataset %>% dplyr::select({{ intersection }}))"
"0","    } else{"
"0","      return(NULL)"
"0","    }"
"0","    "
"0","  }"
"0","  "
"0","}"
"0",""
